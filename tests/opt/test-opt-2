; RUN: %clam -O0 --crab-inter --crab-dom=int --crab-track=sing-mem --crab-opt=replace-with-constants --devirt-functions=sea-dsa --crab-print-invariants=false --crab-disable-warnings "%s".c -o %t.bc
; RUN: %llvm_dis < %t.bc | OutputCheck %s --comment=";"


; ModuleID = 'test.bc'
source_filename = "../tests/opt/test-opt-2.c"
target datalayout = "e-m:o-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:128-n8:16:32-S128"
target triple = "i386-apple-macosx10.15.0"

@x = internal unnamed_addr global i32 0, align 4
@a = internal unnamed_addr global [10 x i32] zeroinitializer, align 4
@str = private unnamed_addr constant [10 x i8] c"fool llvm\00", align 1

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @incr_x() unnamed_addr #0 {
_1:
  store i32 1, i32* @x, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @decr_x() unnamed_addr #0 {
_1:
  store i32 0, i32* @x, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i32 @bar(i32 %arg) unnamed_addr #0 {
_2:
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str, i32 0, i32 0))
  ret i32 %arg
}

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main(i32 %arg, i8** %arg1) local_unnamed_addr #0 {
; CHECK: main
_call:
  call fastcc void @incr_x()
  call fastcc void @decr_x()
  %_4 = call i32 @int_nd() #3
  %_5 = icmp eq i32 %_4, 10
  %_call2 = zext i1 %_5 to i32
  call void @__CRAB_assume(i32 %_call2) #3
  br label %_.0

_.0:                                              ; preds = %_9, %_call
  %_br = icmp sgt i32 %_4, 0
  br i1 %_br, label %_9, label %_13

_9:                                               ; preds = %_.0
  store i32 0, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), align 4
  br label %_.0

_13:                                              ; preds = %_.0
  %_14 = call i32 @int_nd() #3
  %_15 = icmp sgt i32 %_14, -1
  %_call4 = zext i1 %_15 to i32
  call void @__CRAB_assume(i32 %_call4) #3
  %_17 = icmp slt i32 %_14, 10
  %_call5 = zext i1 %_17 to i32
  call void @__CRAB_assume(i32 %_call5) #3
  %_21 = call fastcc i32 @bar(i32 0)
  ret i32 0
; CHECK-NOT: foo  
}

declare i32 @int_nd() local_unnamed_addr #1

declare void @__CRAB_assume(i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) #2

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"NumRegisterParameters", i32 0}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{!"clang version 10.0.0 "}
